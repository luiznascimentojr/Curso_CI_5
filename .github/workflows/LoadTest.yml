name: Load Test - Teste de Carga

on:
  workflow_call: #quando outra rotina chamar

jobs:

  LoadTest:
    runs-on: ubuntu-latest
    steps:
    
    - name: executa o checkout 
      uses: actions/checkout@v3 #sempre o primeiro a ser executado, costuma apagar arquivos
      
    - name: Configurando Credenciais AWS
      uses: aws-actions/configure-aws-credentials@v1
      with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

    - name: Clonando repositorio Infra
      run: git clone ttps://github.com/luiznascimentojr/Infra_CI.git
    #Para usarmos o Terraform é necessário instalá-lo na rotina, 
    - name: HashiCorp - Setup Terraform
      uses: hashicorp/setup-terraform@v2.0.3

    #iniciar o Terraform
    - run: terraform -chdir=Infra_CI/env/Homolog init
    #em seguida destruiremos toda infraestrutura que for igual à que já temos
    - run: terraform -chdir=Infra_CI/env/Homolog destroy -auto-approve
    #aplicaremos a nova infraestrutura
    - run: terraform -chdir=Infra_CI/env/Homolog apply -auto-approve
    #teremos a saída do Terraform com o endereço IP ou a URL do ALB (Application Load Balancer ) que já criamos no curso anterior.
    - run: echo "$(terraform -chdir=Infra_CI/env/Homolog output -raw IP_alb)"

    - name: Setup Python
      uses: actions/setup-python@v4.7.0
      with:
        python-version: "3.10"

    - name: Setup Python
      uses: BSFishy/pip-action@v1
      with:
        packages: |
          locust

    - run: |
        echo "from locust import HttpUser, TaskSet, task, between" >> locustfile.py
        echo "" >> locustfile.py
        echo "class UserTasks(TaskSet):" >> locustfile.py
        echo "  @task(1)" >> locustfile.py
        echo "  def index(self):" >> locustfile.py
        echo '    self.client.get("/bruno")' >> locustfile.py
        echo "" >> locustfile.py
        echo "class WebsiteUser(HttpUser)" >> locustfile.py
        echo "  tasks = [UserTasks]" >> locustfile.py
        echo "  wait_time = between(1, 5)" >> locustfile.py     

    - name: Roda teste de carga
      run: sleep 60s ; locust -f locustfile.py --headless -u 10 -r 5 --run-time 60s -H http://${{ steps.URL.outputs.stdout }}

    - name: Desmonta a estrutura do teste de carga # nao gerar mais custo, importante sempre demontar
      run: terraform -chdir=Infra_CI/env/Homolog destroy -auto-approve
